exit
record = parsed_page.css("table#main_table_countries_today > tbody > tr[0]").text
record = parsed_page.css("table#main_table_countries_today
records.first
records
exit
records
total_countries
exit
find_country("nigeria")
exit
record_hash[:name].downcase
record_hash
exit
all_countries.select{|c| c[:name] == "China"}
all_countries
exit
records.select {|record| record[:name]  == "China" }
records.select {|record| record["name"] = "China" }
records.select {|record| record["name"] === "China" }
records.select {|record| record["name"] == "China" }
records
exit
records.last[:name]
records.last
exit
JSON.parse(unparsed_page)
parsed_page
exit
parsed_records.last
parsed_records
exit
parsed_records.last
parsed_records
exit
records.last[:name]
records.last.[:name]
records.last.name
records.last
exit
records.last
exit
records[199]
records[201]
records[200]
records.count
records.last
records[2]
records[0-4]
records[0]
records[1]
records[2]
records[3]
records.third
records.last
records.first
exit
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr").map(&:text).count
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr").map(&:text)
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr").text
records.last
records.count
exit
joy = {name: record[1], cases: record [2]}
record
exit
unformatted[6]
unformatted[5]
unformatted[2]
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text.split("\n")
exit
record = {country: unformatted[1]}
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text.split("\n")
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr[1]").split("\n")
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text
name = unformatted.split("\n")[1]
unformatted.split("\n")
unformatted = parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text
parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text
parsed_page.css("table#main_table_countries_today > tbody > tr[#{total_countries}]").text
country_one
exit
parsed_page.css("table#main_table_countries_today > tbody > tr[180]").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr[#{total_countries}]").map(&:text)
total_Countries = 200
total_countries
i
exit
total_countries
i
i = 1
records
exit
parsed_page.css("table#main_table_countries_today > tbody > tr[200]").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr[202]").map(&:text)
country_obj[:name]
country_obj.name[:name]
country_obj.name
country_obj["name"]
country_obj
country_obj.name
country_obj.country
country_obj = {name: country[1], total_cases: country[2]}
country = unsorted.split("\n")
unsorted.split("\n")
arr = unsorted.split("\n")[1]
arr = [["country",unsorted.split("\n"[1] ]]
unsorted.split("\n")[1]
unsorted.split("\n")
unsorted = parsed_page.css("table#main_table_countries_today > tbody > tr[2]").text
unsorted.split("\n")[1]
unsorted.split("\n")
unsorted
unsorted.split('\n')
unsorted = parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text
parsed_page.css("table#main_table_countries_today > tbody > tr[1]").text
parsed_page.css("table#main_table_countries_today > tbody > tr[1]").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr[0]").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr > td").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr > td").text
parsed_page.css("table#main_table_countries_today > tbody > tr > td > td").text
parsed_page.css("table#main_table_countries_today > tbody > tr > td >td").text
parsed_page.css("table#main_table_countries_today > tbody > tr > td >td").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr > td").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr").map(&:text)
parsed_page.css("table#main_table_countries_today > tbody > tr").count
parsed_page.css("table#main_table_countries_today > tbody > tr").map(&:text)
parsed_page.css("table.main_table_countries_today > tbody > tr").map(&:text)
parsed_page.css('table > tbody[2] > tr').count
parsed_page.css('table > tbody[4] > tr').first.text
parsed_page.css('table > tbody[0] > tr').first.text
parsed_page.css('table > tbody[3] > tr').first.text
parsed_page.css('table > tbody[2] > tr').first.text
parsed_page.css('table > tbody[1] > tr').first.text
parsed_page.css('table > tbody[2] > tr').first.text
parsed_page.css('table > tbody[2] > tr').first.map(&:text)
parsed_page.css('table > tbody[2] > tr').first
parsed_page.css('table > tbody[2] > tr').map(&:text)
parsed_page.css("table > tbody[2] > tr").map(&:text)
parsed_page.css("table.main_table_countries > tbody[2] > tr").map(&:text)
parsed_page.css("table.main_table_countries > tbody[4] > tr").map(&:text)
parsed_page.css("table.main_table_countries > tbody[3] > tr").map(&:text)
parsed_page.css("table.main_table_countries > tbody[2] > tr").map(&:text)
parsed_page.css("table.main_table_countries > tbody[1] > tr").map(&:text)
parsed_page.css("table.main_table_countries > tbody[0] > tr").map(&:text)
parsed_page.css("table.main_table_countries > tbody > tr").map(&:text)
parsed_page.css("table.main_table_countries > thead > tr").map(&:text)
parsed_page.css("table.main_table_countries > thead > tr").map(&:text).count
clear
parsed_page.css("table.main_table_countries > thead > tr").map(&:text).count
parsed_page.css("table.main_table_countries > thead > tr").map(&:text)
parsed_page.css("table.main_table_countries > thead > tr").text
parsed_page.css("table.main_table_countries > thead > tr")
parsed_page.css("table.main_table_countries > thead")
parsed_page.css("table.main_table_countries" > thead)
parsed_page.css("table.main_table_countries")["thead"]
parsed_page.css("table.main_table_countries").thead
parsed_page.id("table.main_table_countries_today").count
parsed_page.css("table.main_table_countries_today").count
parsed_page.css("table.main_table_countries").count
parsed_page.css("table.main_table_countries.thead")
parsed_page.css("table.main_table_countries")['thead']
parsed_page.css("table.main_table_countries").text
parsed_page.css("table.main_table_countries")
parsed_page.css("table.main_table_countries_today")
parsed_page.css('[id="table.main_table_countries_today"]')
parsed_page.at_css('[id="table.main_table_countries_today"]')
parsed_page.css('table.main_table_countries_today')
parsed_page
